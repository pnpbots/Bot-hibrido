# =============================================================================
# .dockerignore - PNP Television Bot
# Excluye archivos innecesarios del contexto de build de Docker
# =============================================================================

# =============================================================================
# Version Control
# =============================================================================
.git
.gitignore
.gitattributes
.github/

# =============================================================================
# Development Files  
# =============================================================================
README.md
CHANGELOG.md
LICENSE
docs/
*.md

# Development scripts
setup-github-deploy.sh
deploy.sh
install.sh

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# =============================================================================
# Python
# =============================================================================
__pycache__/
*.py[cod]
*$py.class
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
env/
ENV/
.venv/
.ENV/
pyvenv.cfg

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
*.py,cover
.hypothesis/
.cache
nosetests.xml
coverage.xml
*.coveragerc

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# =============================================================================
# Environment and Configuration
# =============================================================================
.env
.env.local
.env.development
.env.test
.env.production
.env.staging

# Configuration backups
*.env.backup
*.env.bak

# =============================================================================
# Logs and Data (Runtime)
# =============================================================================
logs/
*.log
data/
backups/
tmp/
temp/

# Bot specific runtime files
*.db
*.sqlite
*.sqlite3

# =============================================================================
# Cloud and Deployment
# =============================================================================
cloudbuild.yaml.backup
.gcloudignore

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Kubernetes
k8s/
*.yaml.template

# =============================================================================
# Dependencies and Cache
# =============================================================================
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Package manager files (if using alternative managers)
poetry.lock
Pipfile.lock
pipenv/

# Pip
pip-log.txt
pip-delete-this-directory.txt

# =============================================================================
# Security and Sensitive Files
# =============================================================================
*.pem
*.key
*.crt
*.p12
secrets/
credentials/

# SSH keys
id_rsa*
id_ed25519*
known_hosts

# =============================================================================
# Monitoring and Analytics
# =============================================================================
.nyc_output
coverage/

# Sentry
.sentryclirc

# =============================================================================
# Docker
# =============================================================================
Dockerfile.dev
docker-compose.override.yml
docker-compose.dev.yml
.dockerignore.backup

# =============================================================================
# Build Artifacts
# =============================================================================
*.tar
*.tar.gz
*.zip
*.7z

# Compiled files
*.com
*.class
*.dll
*.exe
*.o
*.so

# =============================================================================
# OS Generated Files
# =============================================================================
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
$RECYCLE.BIN/
Desktop.ini

# Linux
*~

# =============================================================================
# Temporary Files
# =============================================================================
*.tmp
*.temp
*.bak
*.swp
*.swo

# =============================================================================
# Application Specific
# =============================================================================

# Bot data (will be in volumes)
users.json
bot_data/
analytics/
exports/

# Development databases
test.db
dev.db
development.sqlite

# Local development files
local_config.py
dev_settings.py

# Scripts de desarrollo
scripts/dev/
scripts/test/

# Archivos de ejemplo
examples/
samples/

# =============================================================================
# Cloud Build Specific
# =============================================================================

# Skip estos durante el build
.git/
.github/workflows/

# =============================================================================
# Large Files (should be external)
# =============================================================================

# Media files que no deberían estar en el repo
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.mp3
*.wav
*.flac

# Images grandes (iconos pequeños están OK)
*.psd
*.ai
*.eps

# Archives
*.rar
*.7z
*.tar.gz
*.tar.bz2

# =============================================================================
# IMPORTANTE: Mantener estos archivos
# =============================================================================

# Asegúrate de que estos NO estén en .dockerignore:
# requirements.txt ✅
# app/ ✅
# main.py ✅
# run_hybrid_bot.py ✅
# Dockerfile ✅

# =============================================================================
# Notas
# =============================================================================

# 1. Este archivo optimiza el build de Docker excluyendo archivos innecesarios
# 2. Reduce el tamaño del contexto de build y mejora la velocidad
# 3. Los archivos excluidos no se copian al contenedor
# 4. Los datos y logs se manejan con volúmenes en tiempo de ejecución
# 5. Las variables de entorno se pasan en el deployment, no en el build